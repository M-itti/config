#!/bin/bash

# Check if an image name was provided
if [ "$#" -ne 1 ]; then
  echo "Usage: $0 <image_name>"
  exit 1
fi

# Image name provided by the user
IMAGE_NAME="$1"

# Define the old and new image names
OLD_IMAGE="docker.arvancloud.ir/$IMAGE_NAME:latest"
NEW_IMAGE="$IMAGE_NAME:latest"

# Function to pull, tag, and clean up images
process_image() {
  local old_name=$1
  local new_name=$2

  echo "Pulling image: $old_name"
  
  # Pull the image from the registry
  docker pull "$old_name"

  # Debugging: List images after pull to verify tag
  echo "Listing images after pull:"
  docker images | grep "$IMAGE_NAME"

  # Get the image ID of the pulled image
  local image_id=$(docker images -q "$old_name")

  echo "Image ID for $old_name: $image_id"

  if [ -z "$image_id" ]; then
    echo "Failed to find image ID for $old_name."
    return
  fi

  echo "Tagging $old_name as $new_name"
  
  # Tag the image with the new name
  docker tag "$image_id" "$new_name"
  
  # Remove the old tag, but not the image
  echo "Removing old tag: $old_name"
  docker rmi "$old_name" || echo "Failed to remove $old_name"

  # Optionally, you may remove the image ID directly if no longer needed
  # But be careful to avoid removing the newly tagged image
  # docker rmi "$image_id" || echo "Failed to remove image ID $image_id"
}

# Process the image
process_image "$OLD_IMAGE" "$NEW_IMAGE"

echo "Image processing completed for $IMAGE_NAME."
